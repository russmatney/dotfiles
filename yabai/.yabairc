#!/usr/bin/env sh

# the scripting-addition must be loaded manually if
# you are running yabai on macOS Big Sur. Uncomment
# the following line to have the injection performed
# when the config is executed during startup.
#
# for this to work you must configure sudo such that
# it will be able to run the command without password
#
# see this wiki page for information:
#  - https://github.com/koekeishiya/yabai/wiki/Installing-yabai-(latest-release)
#

sudo yabai --load-sa
yabai -m signal --add event=dock_did_restart action="sudo yabai --load-sa"

# global settings
yabai -m config mouse_follows_focus          off
yabai -m config focus_follows_mouse          off
yabai -m config window_origin_display        default
yabai -m config window_placement             second_child
yabai -m config window_topmost               off
yabai -m config window_shadow                on
yabai -m config window_opacity               on
# yabai -m config window_opacity               off
yabai -m config window_opacity_duration      0.0
# yabai -m config active_window_opacity        1.0
# yabai -m config normal_window_opacity        1.0
yabai -m config active_window_opacity        0.94
yabai -m config normal_window_opacity        0.89
yabai -m config window_border                off
yabai -m config window_border_width          6
yabai -m config active_window_border_color   0xff775759
yabai -m config normal_window_border_color   0xff555555
yabai -m config insert_feedback_color        0xffd75f5f
yabai -m config split_ratio                  0.40
yabai -m config auto_balance                 off
yabai -m config mouse_modifier               fn
yabai -m config mouse_action1                move
yabai -m config mouse_action2                resize
yabai -m config mouse_drop_action            swap

# general space settings
yabai -m config layout                       bsp
yabai -m config top_padding                  0
yabai -m config bottom_padding               39
yabai -m config left_padding                 4
yabai -m config right_padding                4
yabai -m config window_gap                   8
# yabai -m config external_bar                 main:0:16


# put everything in the same layer https://github.com/koekeishiya/yabai/issues/2170
yabai -m rule --add app=".*" sub-layer=normal

# float system preferences
yabai -m rule --add app="^System Settings$" manage=off
yabai -m rule --add app="choose" manage=off
yabai -m rule --add app="Kap" manage=off

# float all godot!?
yabai -m rule --add title="Godot Engine$" manage=off
yabai -m rule --add app="godot" manage=off
yabai -m rule --add app="Godot" manage=off
yabai -m rule --add app="Dino" manage=off

yabai -m rule --add title="tauri-doctor-topbar" sticky=on

yabai -m signal --add event=window_created label=fix-topbar title="tauri-doctor-topbar" action="bb --config ~/russmatney/clawe/bb.edn -x ralphie.yabai/fix-topbar"

# refocus after window close
yabai -m signal --add event=window_destroyed label=focus-after-destroy active=yes action="yabai -m query --windows --window &> /dev/null || yabai -m window --focus mouse &> /dev/null || yabai -m window --focus \$(yabai -m query --windows --space | jq .[0].id) &> /dev/null"
# focus new windows (right?)
# most apps do this without trouble, but sometimes opening via emacsclient misses for some reason

# TODO need to ignore some windows here (notifications!!!)
yabai -m signal --add event=window_created label=focus-after-create app="^Emacs$" action='yabai -m window --focus $YABAI_WINDOW_ID'

# apps
yabai -m rule --add app="^Spotify$" scratchpad=spotify grid=11:11:1:1:9:9
yabai -m rule --add app="^Discord$" title!="^Discord Updater$" scratchpad=discord grid=11:11:1:1:9:9
yabai -m rule --add app="^Firefox$" scratchpad=web grid=11:11:1:1:9:9
yabai -m rule --add app="^Firefox Developer" scratchpad=devweb grid=11:11:1:1:9:9
yabai -m rule --add app="^Slack" scratchpad=slack grid=11:11:1:1:9:9
yabai -m rule --add app="^Xcode" scratchpad=xcode grid=11:11:1:1:9:9
yabai -m rule --add app="^Messages$" scratchpad=messages grid=11:11:1:1:9:9
yabai -m rule --add app="^Notion$" scratchpad=notion grid=11:11:1:1:9:9
yabai -m rule --add app="godot" scratchpad=godot
yabai -m rule --add app="Godot" scratchpad=godot
yabai -m rule --add title="Godot Engine$" scratchpad=godot
yabai -m rule --add app="^Aseprite$" scratchpad=aseprite grid=11:11:1:1:9:9
yabai -m rule --add app="^Obsidian$" scratchpad=obsidian grid=11:11:1:1:9:9
yabai -m rule --add app="^Neovide$" scratchpad=neovide grid=11:11:1:1:9:9
yabai -m rule --add app="^Code$" scratchpad=vscode grid=11:11:1:1:9:9

# clawe
yabai -m rule --add title="tauri-doctor-dashboard" scratchpad=clawe-dashboard grid=11:11:1:1:9:9

# emacs
yabai -m rule --add app="Emacs" title="journal" scratchpad=emacs-journal
yabai -m rule --add app="Emacs" title="floating-emacs" scratchpad=emacs-floating grid=11:11:1:1:9:9

yabai -m signal --add event=application_launched action='clawebb -x clawe.doctor/update-topbar'
yabai -m signal --add event=application_terminated action='clawebb -x clawe.doctor/update-topbar'
yabai -m signal --add event=application_deactivated action='clawebb -x clawe.doctor/update-topbar'
yabai -m signal --add event=application_activated action='clawebb -x clawe.doctor/update-topbar'
yabai -m signal --add event=application_visible action='clawebb -x clawe.doctor/update-topbar'
yabai -m signal --add event=application_hidden action='clawebb -x clawe.doctor/update-topbar'
yabai -m signal --add event=space_created action='clawebb -x clawe.doctor/update-topbar'
yabai -m signal --add event=space_destroyed action='clawebb -x clawe.doctor/update-topbar'
yabai -m signal --add event=space_changed action='clawebb -x clawe.doctor/update-topbar'

yabai -m signal --add event=window_created action="~/.local/bin/refresh-query-windows.sh"
yabai -m signal --add event=window_destroyed action="~/.local/bin/refresh-query-windows.sh"
yabai -m signal --add event=window_title_changed action="~/.local/bin/refresh-query-windows.sh"

yabai -m rule --apply

# TODO determine/restore workspace names, drop empty workspaces
clawebb -x clawe.config/set-wm :wm yabai
# clawebb -x clawe.doctor/reload
echo "yabai configuration loaded."
